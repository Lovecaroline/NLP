{
 "metadata": {
  "name": "",
  "signature": "sha256:5ef0435695ca30359f1cd0525c4f5ebe23881eb7e5a22a7e98879ed5802a5d71"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# loading googleNews"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import os,time\n",
      "import numpy as np\n",
      "from gensim.models.word2vec import Word2Vec \n",
      "t1 = time.clock()\n",
      "vector_bin = \"/home/paul/Data/GoogleNews-vectors-negative300.bin\"\n",
      "vector_bin2 = \"/home/paul/Data/\"\n",
      "model = Word2Vec.load_word2vec_format(vector_bin, binary=True)\n",
      "#print model['computer']\n",
      "t2 = time.clock()\n",
      "print (\"elapsed time : %.2f\" % (t2 - t1))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "elapsed time : 60.23\n"
       ]
      }
     ],
     "prompt_number": 1
    },
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "#\u3000\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\u3000\uff03"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import os\n",
      "import numpy as np\n",
      "NUM = 800 #training sets\n",
      "\n",
      "data = \"/home/paul/Documents/NLP/review_polarity/txt_sentoken/\"\n",
      "neg_data = data+\"neg/\"\n",
      "pos_data = data+\"pos/\"\n",
      "neg_files = os.listdir(neg_data)\n",
      "pos_files = os.listdir(pos_data)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# preprocess"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "def cleanText(corpus):\n",
      "    punctuation = \"\"\".,?!:;(){}[]\"\"\"\n",
      "    corpus = [z.lower().replace('\\n', '') for z in corpus]\n",
      "    corpus = [z.replace('<br />', ' ') for z in corpus]\n",
      "    # treat punctuation as ''\n",
      "    for c in punctuation:\n",
      "        corpus = [z.replace(c, '') for z in corpus]\n",
      "    corpus = [z.split() for z in corpus]\n",
      "    return corpus"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# buildArticleVecs"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "def buildArticleVector(text, size=300):\n",
      "    vec = np.zeros(size).reshape((1, size))\n",
      "    count = 0.\n",
      "    for word in text:\n",
      "        try:\n",
      "            vec += model[word].reshape((1, size))\n",
      "            count += 1.\n",
      "        except KeyError:\n",
      "            continue\n",
      "    if count != 0:\n",
      "        vec /= count\n",
      "    return vec"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# load traing sets and labels"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "def loadTrainData():\n",
      "    articles_train = []\n",
      "    for i in range(NUM):\n",
      "        with open(neg_data + neg_files[i],\"r\") as infile:\n",
      "            neg_article = infile.readlines()\n",
      "            article = cleanText(neg_article)\n",
      "            article = np.concatenate(article)\n",
      "            articles_train.append(article)\n",
      "    for i in range(NUM):        \n",
      "        with open(pos_data + pos_files[i],\"r\") as infile:\n",
      "            pos_article = infile.readlines()\n",
      "            article = cleanText(pos_article)\n",
      "            article = np.concatenate(article)\n",
      "            articles_train.append(article)\n",
      "    #articles = np.concatenate(articles)\n",
      "    # given labels\n",
      "    y_train = np.concatenate(([0 for i in range(NUM)],[1 for i in range(NUM)]))\n",
      "    return articles_train,y_train"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# load testing sets and labels"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "def loadTestData():\n",
      "    articles_test = []\n",
      "    for i in range(NUM,1000):\n",
      "        with open(neg_data + neg_files[i],\"r\") as infile:\n",
      "            neg_article = infile.readlines()\n",
      "            article = cleanText(neg_article)\n",
      "            article = np.concatenate(article)\n",
      "            articles_test.append(article)\n",
      "    for i in range(NUM,1000):        \n",
      "        with open(pos_data + pos_files[i],\"r\") as infile:\n",
      "            pos_article = infile.readlines()\n",
      "            article = cleanText(pos_article)\n",
      "            article = np.concatenate(article)\n",
      "            articles_test.append(article)\n",
      "    #articles = np.concatenate(articles)\n",
      "    # given labels\n",
      "    y_test = np.concatenate(([0 for i in range((1000-NUM))],[1 for i in range((1000-NUM))]))\n",
      "    return articles_test,y_test"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "t1 = time.time()\n",
      "articles_train,y_train = loadTrainData()\n",
      "articles_test,y_test = loadTestData()\n",
      "vecs_train = np.concatenate([buildArticleVector(article) for article in articles_train])\n",
      "vecs_test = np.concatenate([buildArticleVector(article) for article in articles_test])\n",
      "t2 = time.time()\n",
      "print \"elapsed time: \",t2 - t1"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "elapsed time:  16.4762518406\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "len(vecs_train),len(vecs_test)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "(1600, 400)"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# training"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from sklearn.svm import SVC\n",
      "from sklearn import metrics, neighbors\n",
      "svm = SVC(C=50, gamma=1, probability=True)\n",
      "#svm = SVC(probability=True)\n",
      "svm.fit(vecs_train,y_train)\n",
      "#print 'Test Accuracy of SVM: %.2f' % svm.score(test_vecs, y_test)\n",
      "print 'Train Accuracy of SVM: %.2f' % svm.score(vecs_train, y_train)\n",
      "print metrics.classification_report(y_train, svm.predict(vecs_train))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Train Accuracy of SVM: 0.91\n",
        "             precision    recall  f1-score   support\n",
        "\n",
        "          0       0.91      0.92      0.91       800\n",
        "          1       0.92      0.91      0.91       800\n",
        "\n",
        "avg / total       0.91      0.91      0.91      1600\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# store parameters of model"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from sklearn.externals import joblib\n",
      "os.chdir(\"SVM_MODEL/\")\n",
      "joblib.dump(svm, \"train_model.m\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 22,
       "text": [
        "['train_model.m',\n",
        " 'train_model.m_01.npy',\n",
        " 'train_model.m_02.npy',\n",
        " 'train_model.m_03.npy',\n",
        " 'train_model.m_04.npy',\n",
        " 'train_model.m_05.npy',\n",
        " 'train_model.m_06.npy',\n",
        " 'train_model.m_07.npy',\n",
        " 'train_model.m_08.npy',\n",
        " 'train_model.m_09.npy',\n",
        " 'train_model.m_10.npy',\n",
        " 'train_model.m_11.npy']"
       ]
      }
     ],
     "prompt_number": 22
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# testing"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "svm = joblib.load(\"train_model.m\")\n",
      "print 'Test Accuracy of SVM: %.2f' % svm.score(vecs_test, y_test)\n",
      "print metrics.classification_report(y_test, svm.predict(vecs_test))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Test Accuracy of SVM: 0.83\n",
        "             precision    recall  f1-score   support\n",
        "\n",
        "          0       0.81      0.87      0.84       200\n",
        "          1       0.86      0.80      0.83       200\n",
        "\n",
        "avg / total       0.83      0.83      0.83       400\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 27
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# predict single samples"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "svm.predict([vecs_test[311]])"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 19,
       "text": [
        "array([1])"
       ]
      }
     ],
     "prompt_number": 19
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# ROC curve"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from sklearn.metrics import roc_curve, auc\n",
      "import matplotlib.pyplot as plt\n",
      "%matplotlib inline\n",
      "pred_probas = svm.predict_proba(vecs_test)[:,1]\n",
      "\n",
      "fpr, tpr, _ = roc_curve(y_test, pred_probas)\n",
      "roc_auc = auc(fpr, tpr)\n",
      "plt.plot(fpr, tpr, label='area = %.2f' % roc_auc)\n",
      "plt.plot([0, 1], [0, 1], 'k--')\n",
      "plt.xlim([0.0, 1.0])\n",
      "plt.ylim([0.0, 1.05])\n",
      "plt.legend(loc='lower right')\n",
      "plt.show()\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<matplotlib.figure.Figure at 0x7fe99444c990>"
       ]
      }
     ],
     "prompt_number": 49
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "svm.predict_proba(vecs_test)[:,1]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 44,
       "text": [
        "array([  4.82993440e-01,   7.94971519e-02,   2.13674973e-01,\n",
        "         2.60670691e-02,   2.96908124e-01,   9.46907909e-01,\n",
        "         8.69215228e-01,   2.44304073e-02,   7.03643423e-02,\n",
        "         3.47050553e-01,   5.78869416e-02,   6.77796384e-01,\n",
        "         9.81817099e-02,   1.60338412e-01,   6.01704710e-01,\n",
        "         2.15918202e-01,   1.01421920e-01,   1.13955763e-01,\n",
        "         9.66630865e-02,   1.69001445e-03,   1.41256517e-01,\n",
        "         1.16003007e-01,   8.00477150e-01,   5.85076042e-02,\n",
        "         3.15286278e-01,   1.37769483e-01,   2.94480805e-02,\n",
        "         3.72624332e-01,   5.22144560e-02,   4.55017545e-04,\n",
        "         8.82174503e-01,   6.53819003e-02,   5.42813465e-02,\n",
        "         2.91290227e-02,   1.28290266e-01,   5.74466873e-01,\n",
        "         1.20242717e-01,   1.02222526e-01,   8.92025991e-01,\n",
        "         3.95019137e-02,   8.80353350e-01,   1.92913369e-01,\n",
        "         1.84643626e-01,   7.55938504e-02,   3.88169493e-01,\n",
        "         6.15757234e-02,   1.11934320e-03,   3.42931424e-01,\n",
        "         1.18154049e-01,   1.40735279e-01,   2.55135956e-01,\n",
        "         9.67715422e-02,   1.91948522e-02,   5.51428226e-01,\n",
        "         9.35680544e-01,   6.00727199e-01,   3.94138392e-02,\n",
        "         9.12955012e-02,   5.70050653e-02,   3.36866598e-02,\n",
        "         5.04487342e-03,   4.23200704e-01,   5.75256166e-02,\n",
        "         1.14516294e-01,   7.11218209e-01,   1.84252685e-01,\n",
        "         2.08414459e-01,   6.09228133e-01,   5.46452993e-02,\n",
        "         2.09040304e-02,   1.72021229e-01,   1.69440208e-01,\n",
        "         4.30506731e-01,   3.24307443e-02,   5.60581371e-02,\n",
        "         1.47032358e-01,   6.59045373e-02,   6.07028937e-02,\n",
        "         1.47201469e-01,   2.03827525e-01,   1.50236028e-01,\n",
        "         7.79418862e-02,   3.59841345e-01,   2.95150016e-01,\n",
        "         9.89430783e-02,   7.80389793e-03,   4.40592648e-02,\n",
        "         9.97102936e-02,   1.04267897e-01,   1.25629444e-01,\n",
        "         1.97297642e-01,   3.15136768e-02,   1.05330596e-02,\n",
        "         2.22322513e-01,   2.22138905e-01,   1.63343048e-01,\n",
        "         5.55073783e-02,   5.14474689e-02,   3.75128615e-03,\n",
        "         6.20029410e-02,   2.30023504e-02,   7.31367577e-02,\n",
        "         2.25734843e-01,   5.00000000e-01,   1.84025147e-01,\n",
        "         9.20132328e-04,   5.08924466e-02,   9.70941140e-02,\n",
        "         8.27774278e-02,   1.75308116e-02,   9.93771289e-02,\n",
        "         1.75274671e-01,   7.41164620e-01,   7.75871998e-01,\n",
        "         5.40129969e-01,   2.95555895e-01,   2.17838792e-01,\n",
        "         5.37073403e-01,   1.11743205e-02,   3.04075373e-01,\n",
        "         2.94391357e-01,   5.57156200e-03,   2.69001819e-02,\n",
        "         8.70951439e-02,   1.64627839e-01,   3.33015667e-01,\n",
        "         8.70057452e-03,   7.56917474e-01,   4.63733497e-01,\n",
        "         2.04736098e-01,   1.11994775e-01,   1.70561655e-01,\n",
        "         7.85993155e-02,   1.40397983e-01,   2.84599382e-01,\n",
        "         3.29248393e-03,   2.15258763e-01,   3.56984628e-01,\n",
        "         2.37836315e-02,   2.59212495e-01,   4.87025488e-01,\n",
        "         5.32923092e-02,   2.01281637e-02,   5.32439840e-02,\n",
        "         2.51084472e-02,   2.85586845e-01,   2.74044289e-01,\n",
        "         1.27051566e-01,   1.48524410e-03,   2.51430719e-01,\n",
        "         2.81519777e-01,   1.08215574e-02,   1.16064734e-01,\n",
        "         5.73452006e-02,   8.44719791e-01,   3.06637883e-03,\n",
        "         3.97070144e-01,   7.61350859e-02,   8.06906373e-01,\n",
        "         1.94838024e-02,   2.40793183e-01,   4.00421177e-01,\n",
        "         5.62930502e-01,   2.60696967e-01,   3.54814690e-03,\n",
        "         5.16163848e-02,   8.07875253e-01,   1.25301982e-01,\n",
        "         1.00459497e-01,   3.51924529e-02,   1.34051513e-01,\n",
        "         7.56686234e-02,   1.77104420e-01,   5.64720422e-02,\n",
        "         3.95964540e-03,   1.47114595e-02,   2.03257636e-02,\n",
        "         5.33415568e-03,   9.39075583e-02,   1.28938457e-03,\n",
        "         1.18242774e-01,   3.04816091e-01,   1.16320687e-01,\n",
        "         2.28722742e-01,   3.71112695e-02,   1.38543165e-01,\n",
        "         3.05999919e-01,   1.48034897e-01,   5.63994153e-01,\n",
        "         8.94800833e-01,   7.88512464e-01,   6.45947099e-02,\n",
        "         1.06562262e-01,   1.63812759e-01,   2.90134692e-02,\n",
        "         1.93347245e-03,   4.32464114e-02,   1.94319970e-03,\n",
        "         1.87215824e-01,   1.89118896e-01,   6.51510992e-01,\n",
        "         9.99987533e-01,   9.79502130e-01,   3.49204186e-01,\n",
        "         8.19701199e-01,   7.56195319e-01,   8.74029142e-01,\n",
        "         9.37464144e-01,   8.89850474e-01,   9.80861827e-01,\n",
        "         9.72261247e-01,   4.90376110e-01,   8.59577137e-01,\n",
        "         8.89569451e-01,   9.48676797e-01,   9.99999963e-01,\n",
        "         8.47862101e-01,   9.82712967e-01,   7.78847437e-01,\n",
        "         9.24592914e-01,   7.29300293e-01,   9.03878375e-01,\n",
        "         9.65806078e-01,   2.58489938e-01,   2.68458572e-01,\n",
        "         4.44450848e-01,   9.37756502e-01,   6.58062922e-01,\n",
        "         9.94561374e-01,   9.43910818e-01,   8.71619928e-01,\n",
        "         6.13018580e-01,   8.87166358e-01,   9.99997694e-01,\n",
        "         8.83171994e-01,   9.99999477e-01,   7.99570900e-01,\n",
        "         9.67939568e-01,   7.02342628e-01,   1.39336925e-01,\n",
        "         4.69922262e-01,   7.47961229e-01,   9.87582524e-01,\n",
        "         6.24888671e-01,   8.10995357e-01,   7.42654744e-01,\n",
        "         7.21061080e-02,   3.44383734e-01,   9.48525857e-01,\n",
        "         6.33978340e-01,   6.94172502e-02,   8.88677290e-01,\n",
        "         8.53770318e-01,   9.76566267e-01,   7.06189344e-01,\n",
        "         8.68960538e-01,   9.47637107e-01,   9.97381391e-01,\n",
        "         6.40036459e-01,   9.50158566e-01,   8.34586191e-01,\n",
        "         9.24171778e-01,   8.84814640e-01,   9.39291684e-01,\n",
        "         3.29186305e-01,   9.64991787e-01,   8.39976348e-01,\n",
        "         7.90803024e-01,   1.35593397e-01,   7.04817358e-01,\n",
        "         6.03527020e-01,   1.70607702e-01,   8.95272382e-01,\n",
        "         5.85080725e-01,   3.48203685e-01,   9.75562089e-01,\n",
        "         7.97702709e-01,   1.74867123e-01,   9.75619908e-01,\n",
        "         7.47676933e-01,   9.89280123e-01,   9.45363304e-01,\n",
        "         7.74711510e-01,   9.87755133e-01,   4.08986426e-01,\n",
        "         9.87161595e-01,   2.56788713e-01,   1.60600765e-01,\n",
        "         9.55674875e-01,   3.56628334e-01,   9.79247304e-01,\n",
        "         9.05673952e-01,   1.41863926e-01,   6.95117694e-01,\n",
        "         9.68231306e-01,   1.62914391e-01,   9.65584621e-01,\n",
        "         9.90827104e-01,   6.53618453e-01,   2.59909001e-01,\n",
        "         9.37919577e-01,   8.37387697e-01,   4.02545907e-01,\n",
        "         8.61007256e-01,   9.37372428e-01,   6.55920218e-01,\n",
        "         8.08078613e-01,   2.13462133e-01,   6.36865018e-01,\n",
        "         9.74560503e-01,   9.72187469e-01,   9.51858464e-01,\n",
        "         2.71601370e-01,   8.48741801e-01,   9.35005140e-01,\n",
        "         5.86017992e-01,   5.20433537e-01,   9.60136955e-01,\n",
        "         5.91203447e-01,   2.66145857e-01,   8.93931105e-01,\n",
        "         5.63479459e-01,   6.36120632e-01,   9.50864806e-01,\n",
        "         6.57167481e-01,   9.64219922e-01,   4.93386673e-01,\n",
        "         8.59326325e-01,   8.46925830e-01,   5.80645322e-01,\n",
        "         2.21141248e-01,   9.37379244e-01,   9.99988952e-01,\n",
        "         9.80758554e-01,   5.19589761e-01,   8.73525802e-01,\n",
        "         7.18373897e-01,   5.00000000e-01,   3.45361210e-01,\n",
        "         8.33083613e-02,   8.18416988e-01,   9.92661040e-01,\n",
        "         9.01759606e-01,   7.24523098e-01,   3.29883900e-01,\n",
        "         9.97002117e-01,   9.86716016e-01,   3.22519458e-01,\n",
        "         9.52192244e-01,   4.57080840e-01,   6.96064100e-01,\n",
        "         9.99987077e-01,   9.93287792e-01,   8.06571464e-01,\n",
        "         7.64286285e-01,   7.80972815e-01,   8.32826304e-01,\n",
        "         8.71320137e-01,   9.15034427e-01,   9.35834237e-01,\n",
        "         8.14774265e-01,   9.95110988e-01,   9.94499172e-01,\n",
        "         9.75015938e-01,   5.50708661e-01,   9.52293794e-01,\n",
        "         9.37739505e-01,   9.39146260e-01,   9.87769467e-01,\n",
        "         9.92605305e-01,   9.60301957e-01,   9.81794995e-01,\n",
        "         9.04817156e-01,   9.25430827e-01,   8.95731576e-01,\n",
        "         7.44846597e-01,   1.65746674e-02,   9.65826478e-01,\n",
        "         5.98997200e-01,   7.97686727e-01,   5.39312015e-01,\n",
        "         6.48887910e-01,   4.87128622e-01,   9.69935809e-01,\n",
        "         7.00061417e-01,   3.34281813e-02,   1.09876762e-01,\n",
        "         4.44043333e-01,   2.14865442e-01,   6.12461057e-01,\n",
        "         8.97565152e-01,   5.00000000e-01,   8.93263357e-01,\n",
        "         8.93981319e-01,   9.53601391e-01,   5.13247332e-01,\n",
        "         6.96120252e-01,   9.45739587e-01,   9.73666528e-01,\n",
        "         8.80544852e-01])"
       ]
      }
     ],
     "prompt_number": 44
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "svm.predict_proba(vecs_test)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 47,
       "text": [
        "array([[  5.17006560e-01,   4.82993440e-01],\n",
        "       [  9.20502848e-01,   7.94971519e-02],\n",
        "       [  7.86325027e-01,   2.13674973e-01],\n",
        "       [  9.73932931e-01,   2.60670691e-02],\n",
        "       [  7.03091876e-01,   2.96908124e-01],\n",
        "       [  5.30920907e-02,   9.46907909e-01],\n",
        "       [  1.30784772e-01,   8.69215228e-01],\n",
        "       [  9.75569593e-01,   2.44304073e-02],\n",
        "       [  9.29635658e-01,   7.03643423e-02],\n",
        "       [  6.52949447e-01,   3.47050553e-01],\n",
        "       [  9.42113058e-01,   5.78869416e-02],\n",
        "       [  3.22203616e-01,   6.77796384e-01],\n",
        "       [  9.01818290e-01,   9.81817099e-02],\n",
        "       [  8.39661588e-01,   1.60338412e-01],\n",
        "       [  3.98295290e-01,   6.01704710e-01],\n",
        "       [  7.84081798e-01,   2.15918202e-01],\n",
        "       [  8.98578080e-01,   1.01421920e-01],\n",
        "       [  8.86044237e-01,   1.13955763e-01],\n",
        "       [  9.03336913e-01,   9.66630865e-02],\n",
        "       [  9.98309986e-01,   1.69001445e-03],\n",
        "       [  8.58743483e-01,   1.41256517e-01],\n",
        "       [  8.83996993e-01,   1.16003007e-01],\n",
        "       [  1.99522850e-01,   8.00477150e-01],\n",
        "       [  9.41492396e-01,   5.85076042e-02],\n",
        "       [  6.84713722e-01,   3.15286278e-01],\n",
        "       [  8.62230517e-01,   1.37769483e-01],\n",
        "       [  9.70551920e-01,   2.94480805e-02],\n",
        "       [  6.27375668e-01,   3.72624332e-01],\n",
        "       [  9.47785544e-01,   5.22144560e-02],\n",
        "       [  9.99544982e-01,   4.55017545e-04],\n",
        "       [  1.17825497e-01,   8.82174503e-01],\n",
        "       [  9.34618100e-01,   6.53819003e-02],\n",
        "       [  9.45718653e-01,   5.42813465e-02],\n",
        "       [  9.70870977e-01,   2.91290227e-02],\n",
        "       [  8.71709734e-01,   1.28290266e-01],\n",
        "       [  4.25533127e-01,   5.74466873e-01],\n",
        "       [  8.79757283e-01,   1.20242717e-01],\n",
        "       [  8.97777474e-01,   1.02222526e-01],\n",
        "       [  1.07974009e-01,   8.92025991e-01],\n",
        "       [  9.60498086e-01,   3.95019137e-02],\n",
        "       [  1.19646650e-01,   8.80353350e-01],\n",
        "       [  8.07086631e-01,   1.92913369e-01],\n",
        "       [  8.15356374e-01,   1.84643626e-01],\n",
        "       [  9.24406150e-01,   7.55938504e-02],\n",
        "       [  6.11830507e-01,   3.88169493e-01],\n",
        "       [  9.38424277e-01,   6.15757234e-02],\n",
        "       [  9.98880657e-01,   1.11934320e-03],\n",
        "       [  6.57068576e-01,   3.42931424e-01],\n",
        "       [  8.81845951e-01,   1.18154049e-01],\n",
        "       [  8.59264721e-01,   1.40735279e-01],\n",
        "       [  7.44864044e-01,   2.55135956e-01],\n",
        "       [  9.03228458e-01,   9.67715422e-02],\n",
        "       [  9.80805148e-01,   1.91948522e-02],\n",
        "       [  4.48571774e-01,   5.51428226e-01],\n",
        "       [  6.43194560e-02,   9.35680544e-01],\n",
        "       [  3.99272801e-01,   6.00727199e-01],\n",
        "       [  9.60586161e-01,   3.94138392e-02],\n",
        "       [  9.08704499e-01,   9.12955012e-02],\n",
        "       [  9.42994935e-01,   5.70050653e-02],\n",
        "       [  9.66313340e-01,   3.36866598e-02],\n",
        "       [  9.94955127e-01,   5.04487342e-03],\n",
        "       [  5.76799296e-01,   4.23200704e-01],\n",
        "       [  9.42474383e-01,   5.75256166e-02],\n",
        "       [  8.85483706e-01,   1.14516294e-01],\n",
        "       [  2.88781791e-01,   7.11218209e-01],\n",
        "       [  8.15747315e-01,   1.84252685e-01],\n",
        "       [  7.91585541e-01,   2.08414459e-01],\n",
        "       [  3.90771867e-01,   6.09228133e-01],\n",
        "       [  9.45354701e-01,   5.46452993e-02],\n",
        "       [  9.79095970e-01,   2.09040304e-02],\n",
        "       [  8.27978771e-01,   1.72021229e-01],\n",
        "       [  8.30559792e-01,   1.69440208e-01],\n",
        "       [  5.69493269e-01,   4.30506731e-01],\n",
        "       [  9.67569256e-01,   3.24307443e-02],\n",
        "       [  9.43941863e-01,   5.60581371e-02],\n",
        "       [  8.52967642e-01,   1.47032358e-01],\n",
        "       [  9.34095463e-01,   6.59045373e-02],\n",
        "       [  9.39297106e-01,   6.07028937e-02],\n",
        "       [  8.52798531e-01,   1.47201469e-01],\n",
        "       [  7.96172475e-01,   2.03827525e-01],\n",
        "       [  8.49763972e-01,   1.50236028e-01],\n",
        "       [  9.22058114e-01,   7.79418862e-02],\n",
        "       [  6.40158655e-01,   3.59841345e-01],\n",
        "       [  7.04849984e-01,   2.95150016e-01],\n",
        "       [  9.01056922e-01,   9.89430783e-02],\n",
        "       [  9.92196102e-01,   7.80389793e-03],\n",
        "       [  9.55940735e-01,   4.40592648e-02],\n",
        "       [  9.00289706e-01,   9.97102936e-02],\n",
        "       [  8.95732103e-01,   1.04267897e-01],\n",
        "       [  8.74370556e-01,   1.25629444e-01],\n",
        "       [  8.02702358e-01,   1.97297642e-01],\n",
        "       [  9.68486323e-01,   3.15136768e-02],\n",
        "       [  9.89466940e-01,   1.05330596e-02],\n",
        "       [  7.77677487e-01,   2.22322513e-01],\n",
        "       [  7.77861095e-01,   2.22138905e-01],\n",
        "       [  8.36656952e-01,   1.63343048e-01],\n",
        "       [  9.44492622e-01,   5.55073783e-02],\n",
        "       [  9.48552531e-01,   5.14474689e-02],\n",
        "       [  9.96248714e-01,   3.75128615e-03],\n",
        "       [  9.37997059e-01,   6.20029410e-02],\n",
        "       [  9.76997650e-01,   2.30023504e-02],\n",
        "       [  9.26863242e-01,   7.31367577e-02],\n",
        "       [  7.74265157e-01,   2.25734843e-01],\n",
        "       [  5.00000000e-01,   5.00000000e-01],\n",
        "       [  8.15974853e-01,   1.84025147e-01],\n",
        "       [  9.99079868e-01,   9.20132328e-04],\n",
        "       [  9.49107553e-01,   5.08924466e-02],\n",
        "       [  9.02905886e-01,   9.70941140e-02],\n",
        "       [  9.17222572e-01,   8.27774278e-02],\n",
        "       [  9.82469188e-01,   1.75308116e-02],\n",
        "       [  9.00622871e-01,   9.93771289e-02],\n",
        "       [  8.24725329e-01,   1.75274671e-01],\n",
        "       [  2.58835380e-01,   7.41164620e-01],\n",
        "       [  2.24128002e-01,   7.75871998e-01],\n",
        "       [  4.59870031e-01,   5.40129969e-01],\n",
        "       [  7.04444105e-01,   2.95555895e-01],\n",
        "       [  7.82161208e-01,   2.17838792e-01],\n",
        "       [  4.62926597e-01,   5.37073403e-01],\n",
        "       [  9.88825680e-01,   1.11743205e-02],\n",
        "       [  6.95924627e-01,   3.04075373e-01],\n",
        "       [  7.05608643e-01,   2.94391357e-01],\n",
        "       [  9.94428438e-01,   5.57156200e-03],\n",
        "       [  9.73099818e-01,   2.69001819e-02],\n",
        "       [  9.12904856e-01,   8.70951439e-02],\n",
        "       [  8.35372161e-01,   1.64627839e-01],\n",
        "       [  6.66984333e-01,   3.33015667e-01],\n",
        "       [  9.91299425e-01,   8.70057452e-03],\n",
        "       [  2.43082526e-01,   7.56917474e-01],\n",
        "       [  5.36266503e-01,   4.63733497e-01],\n",
        "       [  7.95263902e-01,   2.04736098e-01],\n",
        "       [  8.88005225e-01,   1.11994775e-01],\n",
        "       [  8.29438345e-01,   1.70561655e-01],\n",
        "       [  9.21400685e-01,   7.85993155e-02],\n",
        "       [  8.59602017e-01,   1.40397983e-01],\n",
        "       [  7.15400618e-01,   2.84599382e-01],\n",
        "       [  9.96707516e-01,   3.29248393e-03],\n",
        "       [  7.84741237e-01,   2.15258763e-01],\n",
        "       [  6.43015372e-01,   3.56984628e-01],\n",
        "       [  9.76216368e-01,   2.37836315e-02],\n",
        "       [  7.40787505e-01,   2.59212495e-01],\n",
        "       [  5.12974512e-01,   4.87025488e-01],\n",
        "       [  9.46707691e-01,   5.32923092e-02],\n",
        "       [  9.79871836e-01,   2.01281637e-02],\n",
        "       [  9.46756016e-01,   5.32439840e-02],\n",
        "       [  9.74891553e-01,   2.51084472e-02],\n",
        "       [  7.14413155e-01,   2.85586845e-01],\n",
        "       [  7.25955711e-01,   2.74044289e-01],\n",
        "       [  8.72948434e-01,   1.27051566e-01],\n",
        "       [  9.98514756e-01,   1.48524410e-03],\n",
        "       [  7.48569281e-01,   2.51430719e-01],\n",
        "       [  7.18480223e-01,   2.81519777e-01],\n",
        "       [  9.89178443e-01,   1.08215574e-02],\n",
        "       [  8.83935266e-01,   1.16064734e-01],\n",
        "       [  9.42654799e-01,   5.73452006e-02],\n",
        "       [  1.55280209e-01,   8.44719791e-01],\n",
        "       [  9.96933621e-01,   3.06637883e-03],\n",
        "       [  6.02929856e-01,   3.97070144e-01],\n",
        "       [  9.23864914e-01,   7.61350859e-02],\n",
        "       [  1.93093627e-01,   8.06906373e-01],\n",
        "       [  9.80516198e-01,   1.94838024e-02],\n",
        "       [  7.59206817e-01,   2.40793183e-01],\n",
        "       [  5.99578823e-01,   4.00421177e-01],\n",
        "       [  4.37069498e-01,   5.62930502e-01],\n",
        "       [  7.39303033e-01,   2.60696967e-01],\n",
        "       [  9.96451853e-01,   3.54814690e-03],\n",
        "       [  9.48383615e-01,   5.16163848e-02],\n",
        "       [  1.92124747e-01,   8.07875253e-01],\n",
        "       [  8.74698018e-01,   1.25301982e-01],\n",
        "       [  8.99540503e-01,   1.00459497e-01],\n",
        "       [  9.64807547e-01,   3.51924529e-02],\n",
        "       [  8.65948487e-01,   1.34051513e-01],\n",
        "       [  9.24331377e-01,   7.56686234e-02],\n",
        "       [  8.22895580e-01,   1.77104420e-01],\n",
        "       [  9.43527958e-01,   5.64720422e-02],\n",
        "       [  9.96040355e-01,   3.95964540e-03],\n",
        "       [  9.85288541e-01,   1.47114595e-02],\n",
        "       [  9.79674236e-01,   2.03257636e-02],\n",
        "       [  9.94665844e-01,   5.33415568e-03],\n",
        "       [  9.06092442e-01,   9.39075583e-02],\n",
        "       [  9.98710615e-01,   1.28938457e-03],\n",
        "       [  8.81757226e-01,   1.18242774e-01],\n",
        "       [  6.95183909e-01,   3.04816091e-01],\n",
        "       [  8.83679313e-01,   1.16320687e-01],\n",
        "       [  7.71277258e-01,   2.28722742e-01],\n",
        "       [  9.62888731e-01,   3.71112695e-02],\n",
        "       [  8.61456835e-01,   1.38543165e-01],\n",
        "       [  6.94000081e-01,   3.05999919e-01],\n",
        "       [  8.51965103e-01,   1.48034897e-01],\n",
        "       [  4.36005847e-01,   5.63994153e-01],\n",
        "       [  1.05199167e-01,   8.94800833e-01],\n",
        "       [  2.11487536e-01,   7.88512464e-01],\n",
        "       [  9.35405290e-01,   6.45947099e-02],\n",
        "       [  8.93437738e-01,   1.06562262e-01],\n",
        "       [  8.36187241e-01,   1.63812759e-01],\n",
        "       [  9.70986531e-01,   2.90134692e-02],\n",
        "       [  9.98066528e-01,   1.93347245e-03],\n",
        "       [  9.56753589e-01,   4.32464114e-02],\n",
        "       [  9.98056800e-01,   1.94319970e-03],\n",
        "       [  8.12784176e-01,   1.87215824e-01],\n",
        "       [  8.10881104e-01,   1.89118896e-01],\n",
        "       [  3.48489008e-01,   6.51510992e-01],\n",
        "       [  1.24670985e-05,   9.99987533e-01],\n",
        "       [  2.04978698e-02,   9.79502130e-01],\n",
        "       [  6.50795814e-01,   3.49204186e-01],\n",
        "       [  1.80298801e-01,   8.19701199e-01],\n",
        "       [  2.43804681e-01,   7.56195319e-01],\n",
        "       [  1.25970858e-01,   8.74029142e-01],\n",
        "       [  6.25358556e-02,   9.37464144e-01],\n",
        "       [  1.10149526e-01,   8.89850474e-01],\n",
        "       [  1.91381733e-02,   9.80861827e-01],\n",
        "       [  2.77387533e-02,   9.72261247e-01],\n",
        "       [  5.09623890e-01,   4.90376110e-01],\n",
        "       [  1.40422863e-01,   8.59577137e-01],\n",
        "       [  1.10430549e-01,   8.89569451e-01],\n",
        "       [  5.13232034e-02,   9.48676797e-01],\n",
        "       [  3.73582366e-08,   9.99999963e-01],\n",
        "       [  1.52137899e-01,   8.47862101e-01],\n",
        "       [  1.72870335e-02,   9.82712967e-01],\n",
        "       [  2.21152563e-01,   7.78847437e-01],\n",
        "       [  7.54070856e-02,   9.24592914e-01],\n",
        "       [  2.70699707e-01,   7.29300293e-01],\n",
        "       [  9.61216252e-02,   9.03878375e-01],\n",
        "       [  3.41939216e-02,   9.65806078e-01],\n",
        "       [  7.41510062e-01,   2.58489938e-01],\n",
        "       [  7.31541428e-01,   2.68458572e-01],\n",
        "       [  5.55549152e-01,   4.44450848e-01],\n",
        "       [  6.22434976e-02,   9.37756502e-01],\n",
        "       [  3.41937078e-01,   6.58062922e-01],\n",
        "       [  5.43862585e-03,   9.94561374e-01],\n",
        "       [  5.60891823e-02,   9.43910818e-01],\n",
        "       [  1.28380072e-01,   8.71619928e-01],\n",
        "       [  3.86981420e-01,   6.13018580e-01],\n",
        "       [  1.12833642e-01,   8.87166358e-01],\n",
        "       [  2.30595966e-06,   9.99997694e-01],\n",
        "       [  1.16828006e-01,   8.83171994e-01],\n",
        "       [  5.23188958e-07,   9.99999477e-01],\n",
        "       [  2.00429100e-01,   7.99570900e-01],\n",
        "       [  3.20604324e-02,   9.67939568e-01],\n",
        "       [  2.97657372e-01,   7.02342628e-01],\n",
        "       [  8.60663075e-01,   1.39336925e-01],\n",
        "       [  5.30077738e-01,   4.69922262e-01],\n",
        "       [  2.52038771e-01,   7.47961229e-01],\n",
        "       [  1.24174756e-02,   9.87582524e-01],\n",
        "       [  3.75111329e-01,   6.24888671e-01],\n",
        "       [  1.89004643e-01,   8.10995357e-01],\n",
        "       [  2.57345256e-01,   7.42654744e-01],\n",
        "       [  9.27893892e-01,   7.21061080e-02],\n",
        "       [  6.55616266e-01,   3.44383734e-01],\n",
        "       [  5.14741432e-02,   9.48525857e-01],\n",
        "       [  3.66021660e-01,   6.33978340e-01],\n",
        "       [  9.30582750e-01,   6.94172502e-02],\n",
        "       [  1.11322710e-01,   8.88677290e-01],\n",
        "       [  1.46229682e-01,   8.53770318e-01],\n",
        "       [  2.34337333e-02,   9.76566267e-01],\n",
        "       [  2.93810656e-01,   7.06189344e-01],\n",
        "       [  1.31039462e-01,   8.68960538e-01],\n",
        "       [  5.23628929e-02,   9.47637107e-01],\n",
        "       [  2.61860899e-03,   9.97381391e-01],\n",
        "       [  3.59963541e-01,   6.40036459e-01],\n",
        "       [  4.98414342e-02,   9.50158566e-01],\n",
        "       [  1.65413809e-01,   8.34586191e-01],\n",
        "       [  7.58282217e-02,   9.24171778e-01],\n",
        "       [  1.15185360e-01,   8.84814640e-01],\n",
        "       [  6.07083163e-02,   9.39291684e-01],\n",
        "       [  6.70813695e-01,   3.29186305e-01],\n",
        "       [  3.50082130e-02,   9.64991787e-01],\n",
        "       [  1.60023652e-01,   8.39976348e-01],\n",
        "       [  2.09196976e-01,   7.90803024e-01],\n",
        "       [  8.64406603e-01,   1.35593397e-01],\n",
        "       [  2.95182642e-01,   7.04817358e-01],\n",
        "       [  3.96472980e-01,   6.03527020e-01],\n",
        "       [  8.29392298e-01,   1.70607702e-01],\n",
        "       [  1.04727618e-01,   8.95272382e-01],\n",
        "       [  4.14919275e-01,   5.85080725e-01],\n",
        "       [  6.51796315e-01,   3.48203685e-01],\n",
        "       [  2.44379114e-02,   9.75562089e-01],\n",
        "       [  2.02297291e-01,   7.97702709e-01],\n",
        "       [  8.25132877e-01,   1.74867123e-01],\n",
        "       [  2.43800921e-02,   9.75619908e-01],\n",
        "       [  2.52323067e-01,   7.47676933e-01],\n",
        "       [  1.07198775e-02,   9.89280123e-01],\n",
        "       [  5.46366955e-02,   9.45363304e-01],\n",
        "       [  2.25288490e-01,   7.74711510e-01],\n",
        "       [  1.22448672e-02,   9.87755133e-01],\n",
        "       [  5.91013574e-01,   4.08986426e-01],\n",
        "       [  1.28384048e-02,   9.87161595e-01],\n",
        "       [  7.43211287e-01,   2.56788713e-01],\n",
        "       [  8.39399235e-01,   1.60600765e-01],\n",
        "       [  4.43251254e-02,   9.55674875e-01],\n",
        "       [  6.43371666e-01,   3.56628334e-01],\n",
        "       [  2.07526961e-02,   9.79247304e-01],\n",
        "       [  9.43260478e-02,   9.05673952e-01],\n",
        "       [  8.58136074e-01,   1.41863926e-01],\n",
        "       [  3.04882306e-01,   6.95117694e-01],\n",
        "       [  3.17686940e-02,   9.68231306e-01],\n",
        "       [  8.37085609e-01,   1.62914391e-01],\n",
        "       [  3.44153790e-02,   9.65584621e-01],\n",
        "       [  9.17289603e-03,   9.90827104e-01],\n",
        "       [  3.46381547e-01,   6.53618453e-01],\n",
        "       [  7.40090999e-01,   2.59909001e-01],\n",
        "       [  6.20804234e-02,   9.37919577e-01],\n",
        "       [  1.62612303e-01,   8.37387697e-01],\n",
        "       [  5.97454093e-01,   4.02545907e-01],\n",
        "       [  1.38992744e-01,   8.61007256e-01],\n",
        "       [  6.26275715e-02,   9.37372428e-01],\n",
        "       [  3.44079782e-01,   6.55920218e-01],\n",
        "       [  1.91921387e-01,   8.08078613e-01],\n",
        "       [  7.86537867e-01,   2.13462133e-01],\n",
        "       [  3.63134982e-01,   6.36865018e-01],\n",
        "       [  2.54394967e-02,   9.74560503e-01],\n",
        "       [  2.78125312e-02,   9.72187469e-01],\n",
        "       [  4.81415361e-02,   9.51858464e-01],\n",
        "       [  7.28398630e-01,   2.71601370e-01],\n",
        "       [  1.51258199e-01,   8.48741801e-01],\n",
        "       [  6.49948597e-02,   9.35005140e-01],\n",
        "       [  4.13982008e-01,   5.86017992e-01],\n",
        "       [  4.79566463e-01,   5.20433537e-01],\n",
        "       [  3.98630452e-02,   9.60136955e-01],\n",
        "       [  4.08796553e-01,   5.91203447e-01],\n",
        "       [  7.33854143e-01,   2.66145857e-01],\n",
        "       [  1.06068895e-01,   8.93931105e-01],\n",
        "       [  4.36520541e-01,   5.63479459e-01],\n",
        "       [  3.63879368e-01,   6.36120632e-01],\n",
        "       [  4.91351938e-02,   9.50864806e-01],\n",
        "       [  3.42832519e-01,   6.57167481e-01],\n",
        "       [  3.57800775e-02,   9.64219922e-01],\n",
        "       [  5.06613327e-01,   4.93386673e-01],\n",
        "       [  1.40673675e-01,   8.59326325e-01],\n",
        "       [  1.53074170e-01,   8.46925830e-01],\n",
        "       [  4.19354678e-01,   5.80645322e-01],\n",
        "       [  7.78858752e-01,   2.21141248e-01],\n",
        "       [  6.26207563e-02,   9.37379244e-01],\n",
        "       [  1.10477803e-05,   9.99988952e-01],\n",
        "       [  1.92414456e-02,   9.80758554e-01],\n",
        "       [  4.80410239e-01,   5.19589761e-01],\n",
        "       [  1.26474198e-01,   8.73525802e-01],\n",
        "       [  2.81626103e-01,   7.18373897e-01],\n",
        "       [  5.00000000e-01,   5.00000000e-01],\n",
        "       [  6.54638790e-01,   3.45361210e-01],\n",
        "       [  9.16691639e-01,   8.33083613e-02],\n",
        "       [  1.81583012e-01,   8.18416988e-01],\n",
        "       [  7.33895996e-03,   9.92661040e-01],\n",
        "       [  9.82403938e-02,   9.01759606e-01],\n",
        "       [  2.75476902e-01,   7.24523098e-01],\n",
        "       [  6.70116100e-01,   3.29883900e-01],\n",
        "       [  2.99788344e-03,   9.97002117e-01],\n",
        "       [  1.32839840e-02,   9.86716016e-01],\n",
        "       [  6.77480542e-01,   3.22519458e-01],\n",
        "       [  4.78077557e-02,   9.52192244e-01],\n",
        "       [  5.42919160e-01,   4.57080840e-01],\n",
        "       [  3.03935900e-01,   6.96064100e-01],\n",
        "       [  1.29229371e-05,   9.99987077e-01],\n",
        "       [  6.71220826e-03,   9.93287792e-01],\n",
        "       [  1.93428536e-01,   8.06571464e-01],\n",
        "       [  2.35713715e-01,   7.64286285e-01],\n",
        "       [  2.19027185e-01,   7.80972815e-01],\n",
        "       [  1.67173696e-01,   8.32826304e-01],\n",
        "       [  1.28679863e-01,   8.71320137e-01],\n",
        "       [  8.49655726e-02,   9.15034427e-01],\n",
        "       [  6.41657632e-02,   9.35834237e-01],\n",
        "       [  1.85225735e-01,   8.14774265e-01],\n",
        "       [  4.88901240e-03,   9.95110988e-01],\n",
        "       [  5.50082847e-03,   9.94499172e-01],\n",
        "       [  2.49840622e-02,   9.75015938e-01],\n",
        "       [  4.49291339e-01,   5.50708661e-01],\n",
        "       [  4.77062064e-02,   9.52293794e-01],\n",
        "       [  6.22604950e-02,   9.37739505e-01],\n",
        "       [  6.08537398e-02,   9.39146260e-01],\n",
        "       [  1.22305330e-02,   9.87769467e-01],\n",
        "       [  7.39469453e-03,   9.92605305e-01],\n",
        "       [  3.96980427e-02,   9.60301957e-01],\n",
        "       [  1.82050046e-02,   9.81794995e-01],\n",
        "       [  9.51828436e-02,   9.04817156e-01],\n",
        "       [  7.45691728e-02,   9.25430827e-01],\n",
        "       [  1.04268424e-01,   8.95731576e-01],\n",
        "       [  2.55153403e-01,   7.44846597e-01],\n",
        "       [  9.83425333e-01,   1.65746674e-02],\n",
        "       [  3.41735218e-02,   9.65826478e-01],\n",
        "       [  4.01002800e-01,   5.98997200e-01],\n",
        "       [  2.02313273e-01,   7.97686727e-01],\n",
        "       [  4.60687985e-01,   5.39312015e-01],\n",
        "       [  3.51112090e-01,   6.48887910e-01],\n",
        "       [  5.12871378e-01,   4.87128622e-01],\n",
        "       [  3.00641909e-02,   9.69935809e-01],\n",
        "       [  2.99938583e-01,   7.00061417e-01],\n",
        "       [  9.66571819e-01,   3.34281813e-02],\n",
        "       [  8.90123238e-01,   1.09876762e-01],\n",
        "       [  5.55956667e-01,   4.44043333e-01],\n",
        "       [  7.85134558e-01,   2.14865442e-01],\n",
        "       [  3.87538943e-01,   6.12461057e-01],\n",
        "       [  1.02434848e-01,   8.97565152e-01],\n",
        "       [  5.00000000e-01,   5.00000000e-01],\n",
        "       [  1.06736643e-01,   8.93263357e-01],\n",
        "       [  1.06018681e-01,   8.93981319e-01],\n",
        "       [  4.63986085e-02,   9.53601391e-01],\n",
        "       [  4.86752668e-01,   5.13247332e-01],\n",
        "       [  3.03879748e-01,   6.96120252e-01],\n",
        "       [  5.42604130e-02,   9.45739587e-01],\n",
        "       [  2.63334721e-02,   9.73666528e-01],\n",
        "       [  1.19455148e-01,   8.80544852e-01]])"
       ]
      }
     ],
     "prompt_number": 47
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "article"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 52,
       "text": [
        "array(['after', 'a', 'stylistic', 'detour', 'with', 'mrs', 'parker', 'and',\n",
        "       'the', 'vicious', 'circle', 'which', 'despite', 'its',\n",
        "       'uncomfortable', 'tone', 'was', 'close', 'to', 'being', 'a',\n",
        "       'conventional', 'movie', 'director', 'alan', 'rudolph', 'has',\n",
        "       'returned', 'to', 'his', 'unique', 'brand', 'of', 'film', 'making',\n",
        "       'with', 'afterglow', 'a', 'romantic', 'black', 'comedy', 'about',\n",
        "       'love', 'betrayal', 'and', 'self-absorption', 'while', 'these',\n",
        "       'may', 'not', 'be', 'the', 'most', 'unusual', 'themes', 'to',\n",
        "       'fashion', 'into', 'a', 'motion', 'picture', \"rudolph's\",\n",
        "       'atypical', 'approach', 'to', 'the', 'characters', 'and', 'their',\n",
        "       'situations', 'makes', 'for', 'an', 'intriguing', 'if', 'not',\n",
        "       'always', 'pleasant', 'movie', 'it', 'is', 'said', 'that',\n",
        "       'rudolph', 'is', 'a', 'polarizing', 'director', 'meaning', 'that',\n",
        "       'most', 'viewers', 'either', 'love', 'his', 'work', 'or', 'hate',\n",
        "       'it', 'until', 'mrs', 'parker', 'i', 'had', 'not', 'been', 'overly',\n",
        "       'impressed', 'by', 'his', 'movies', 'i', 'found', 'equinox', 'his',\n",
        "       'last', 'pre-', 'mrs', 'parker', 'effort', 'to', 'be', 'irritating',\n",
        "       'and', 'frustrating', 'i', 'was', 'somewhat', 'surprised',\n",
        "       'therefore', 'to', 'discover', 'that', 'i', 'liked', 'afterglow',\n",
        "       'there', 'are', 'several', 'reasons', 'for', 'this', 'but', 'the',\n",
        "       'paramount', 'one', 'is', 'that', 'rudolph', 'seems', 'to', 'have',\n",
        "       'muted', 'some', 'of', 'the', 'most', 'strident', 'mannered',\n",
        "       'aspects', 'of', 'his', 'approach', 'the', 'characters', 'here',\n",
        "       'are', 'more', 'like', 'real', 'people', 'with', 'genuine',\n",
        "       'problems', 'the', 'story', 'is', 'absorbing', 'and', 'the',\n",
        "       'acting', 'is', 'top-notch', 'in', 'short', 'rudolph', 'has',\n",
        "       'created', 'a', 'world', 'that', \"it's\", 'worth', 'spending', 'two',\n",
        "       'hours', 'in', 'afterglow', 'introduces', 'us', 'to', 'two',\n",
        "       'unhappily', 'married', 'couples', 'jeffrey', 'byron', 'jonny',\n",
        "       'lee', 'miller', 'is', 'a', 'cold', 'seemingly-heartless',\n",
        "       'businessman', 'who', 'is', 'sexually', 'indifferent', 'to', 'his',\n",
        "       'young', 'wife', 'marianne', 'lara', 'flynn', 'boyle', 'for', 'her',\n",
        "       'part', 'marianne', 'is', 'so', 'obsessed', 'with', 'having', 'a',\n",
        "       'baby', 'that', 'she', 'never', 'attempts', 'to', 'interact',\n",
        "       'with', 'her', 'husband', 'on', 'a', 'human', 'level', 'all',\n",
        "       \"she's\", 'interested', 'in', 'is', 'seducing', 'him', 'during',\n",
        "       'those', 'few', 'days', 'when', \"she's\", 'ovulating', 'after', 'he',\n",
        "       'refuses', 'to', 'make', 'love', 'she', 'decides', 'to', 'find',\n",
        "       'someone', 'else', 'to', 'play', 'the', 'role', 'of', 'sperm',\n",
        "       'donor', 'the', 'other', 'couple', 'lucky', 'nick', 'nolte', 'and',\n",
        "       'phyllis', 'mann', 'julie', 'christie', 'are', 'an', 'older',\n",
        "       'pair', 'but', \"they're\", 'no', 'more', 'content', 'than',\n",
        "       'jeffrey', 'and', 'marianne', 'a', 'mysterious', 'fracture', 'in',\n",
        "       'their', 'past', 'relationship', 'has', 'driven', 'them', 'apart',\n",
        "       'they', 'remain', 'married', 'as', 'a', 'matter', 'of',\n",
        "       'convenience', 'but', 'since', 'phyllis', \"won't\", 'allow', 'lucky',\n",
        "       'to', 'touch', 'her', 'they', 'have', 'an', 'unspoken', 'agreement',\n",
        "       'whereby', 'he', 'can', 'fool', 'around', 'as', 'much', 'as', 'he',\n",
        "       'wants', 'provided', 'that', 'no', 'lasting', 'bond', 'is',\n",
        "       'established', 'as', 'a', 'result', 'of', 'these', 'affairs', 'the',\n",
        "       'landscape', 'of', 'emotional', 'pain', 'between', 'them', 'is',\n",
        "       'palpable', 'the', 'four', 'characters', 'begin', 'interacting',\n",
        "       'when', 'marianne', 'hires', 'lucky', 'as', 'a', 'handyman', 'to',\n",
        "       'fix', 'up', 'the', 'inside', 'of', 'the', 'apartment', 'she',\n",
        "       'shares', 'with', 'jeffrey', 'the', 'two', 'of', 'them', 'are',\n",
        "       'immediately', 'attracted', 'to', 'one', 'another', 'and', 'it',\n",
        "       \"doesn't\", 'take', 'long', 'before', \"they're\", 'lounging',\n",
        "       'together', 'naked', 'in', 'her', 'pool', 'meanwhile', 'jeffrey',\n",
        "       'who', 'is', 'captivated', 'by', 'older', 'women', 'runs', 'into',\n",
        "       'phyllis', 'in', 'a', 'hotel', 'bar', 'is', 'smitten', 'and',\n",
        "       'invites', 'her', 'to', 'accompany', 'him', 'on', 'a', 'weekend',\n",
        "       'retreat', 'to', 'the', 'mountains', 'the', 'romantic', 'couplings',\n",
        "       'of', 'the', 'characters', 'are', 'interesting', 'in', 'that',\n",
        "       'they', 'illustrate', 'the', 'multiple', 'faces', 'of', 'love',\n",
        "       'sex', 'means', 'something', 'different', 'to', 'everyone', 'to',\n",
        "       'jeffrey', \"it's\", 'an', 'unpleasant', 'chore', 'a', 'loss', 'of',\n",
        "       'control', 'to', 'marianne', \"it's\", 'a', 'means', 'to', 'a',\n",
        "       'maternal', 'end', 'to', 'lucky', \"it's\", 'an', 'enjoyable',\n",
        "       'distraction', 'that', 'blocks', 'out', 'his', 'marital',\n",
        "       'troubles', 'and', 'to', 'phyllis', \"it's\", 'a', 'method', 'of',\n",
        "       'establishing', 'or', 'denying', 'emotional', 'closeness',\n",
        "       'ultimately', 'none', 'of', 'these', 'characters', 'appears', 'to',\n",
        "       'love', 'anyone', 'else', 'as', 'much', 'as', 'they', 'love',\n",
        "       'themselves', 'the', 'greatest', 'strength', 'of', 'the', 'film',\n",
        "       'lies', 'not', 'in', 'the', 'script', 'but', 'in', 'the',\n",
        "       'performances', 'jonny', 'lee', 'miller', 'is', 'perfect', 'as',\n",
        "       'the', 'selfish', 'callous', 'suit-and-tie', 'businessman', 'those',\n",
        "       'who', 'recall', 'him', 'as', 'sickboy', 'in', 'trainspotting',\n",
        "       'will', 'find', 'that', 'he', 'is', 'almost', 'unrecognizable',\n",
        "       'here', 'as', 'the', 'image', 'of', 'conformity', 'lara', 'flynn',\n",
        "       'boyle', 'who', \"wasn't\", 'impressive', 'in', \"rudolph's\",\n",
        "       'equinox', 'is', 'greatly', 'improved', 'making', 'marianne', 'a',\n",
        "       'jumble', 'of', 'sexiness', 'and', 'vulnerability', 'nick', 'nolte',\n",
        "       'is', 'delightful', 'as', 'the', 'uninhibited', 'lucky', 'and',\n",
        "       'he', 'manages', 'to', 'deliver', 'some', 'of', \"rudolph's\", 'most',\n",
        "       'pregnant', 'lines', 'with', 'practiced', 'ease', 'the', 'clear',\n",
        "       'standout', 'however', 'is', 'julie', 'christie', 'who', 'is',\n",
        "       'nothing', 'short', 'of', 'delicious', 'as', 'the', 'world-weary',\n",
        "       'phyllis', 'her', 'often', 'wry', 'occasionally', 'cutting',\n",
        "       'asides', 'are', 'the', 'source', 'of', 'much', 'of', 'the',\n",
        "       \"film's\", 'humor', 'and', \"there's\", 'hardly', 'ever', 'a',\n",
        "       'moment', 'when', 'she', \"doesn't\", 'steal', 'the', 'spotlight',\n",
        "       'from', 'her', 'co-stars', 'i', \"don't\", 'know', 'if', 'afterglow',\n",
        "       'is', 'the', 'film', 'to', 'convert', 'rudolph-', 'detractors',\n",
        "       'but', 'it', 'seems', 'that', 'this', 'movie', 'is', 'a', 'little',\n",
        "       'more', 'accessible', 'than', 'some', 'of', 'the', \"director's\",\n",
        "       'earlier', 'productions', 'enough', 'of', 'his', 'trademark',\n",
        "       'style', 'remains', 'however', 'to', 'reassure', 'his',\n",
        "       'supporters', 'afterglow', 'is', 'basically', 'a', 'four-pronged',\n",
        "       'character', 'study', 'the', 'plot', 'is', 'not', 'especially',\n",
        "       'compelling', 'but', 'the', 'character', 'interaction', 'is', 'and',\n",
        "       \"that's\", 'the', 'real', 'reason', 'to', 'see', 'this', 'motion',\n",
        "       'picture', 'rudolph', 'has', 'painted', 'an', 'able', 'picture',\n",
        "       'of', 'the', 'non-romantic', 'side', 'of', 'love', '--', 'the',\n",
        "       'one', 'that', 'has', 'more', 'to', 'do', 'with', 'tolerance',\n",
        "       'and', 'familiarity', 'than', 'with', 'affection', 'and',\n",
        "       'attraction'], \n",
        "      dtype='|S19')"
       ]
      }
     ],
     "prompt_number": 52
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
   ],
   "metadata": {}
  }
 ]
}